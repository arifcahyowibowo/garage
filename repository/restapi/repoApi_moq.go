// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package repository

import (
	"projectapi/models"
	"sync"
)

var (
	lockRepoCARMockGetGarageStatus sync.RWMutex
)

// Ensure, that RepoCARMock does implement RepoCAR.
// If this is not the case, regenerate this file with moq.
var _ RepoCAR = &RepoCARMock{}

// RepoCARMock is a mock implementation of RepoCAR.
//
//     func TestSomethingThatUsesRepoCAR(t *testing.T) {
//
//         // make and configure a mocked RepoCAR
//         mockedRepoCAR := &RepoCARMock{
//             GetGarageStatusFunc: func(IDgarage int) map[int]models.GarageStatus {
// 	               panic("mock out the GetGarageStatus method")
//             },
//         }
//
//         // use mockedRepoCAR in code that requires RepoCAR
//         // and then make assertions.
//
//     }
type RepoCARMock struct {
	// GetGarageStatusFunc mocks the GetGarageStatus method.
	GetGarageStatusFunc func(IDgarage int) map[int]models.GarageStatus

	// calls tracks calls to the methods.
	calls struct {
		// GetGarageStatus holds details about calls to the GetGarageStatus method.
		GetGarageStatus []struct {
			// IDgarage is the IDgarage argument value.
			IDgarage int
		}
	}
}

// GetGarageStatus calls GetGarageStatusFunc.
func (mock *RepoCARMock) GetGarageStatus(IDgarage int) map[int]models.GarageStatus {
	if mock.GetGarageStatusFunc == nil {
		panic("RepoCARMock.GetGarageStatusFunc: method is nil but RepoCAR.GetGarageStatus was just called")
	}
	callInfo := struct {
		IDgarage int
	}{
		IDgarage: IDgarage,
	}
	lockRepoCARMockGetGarageStatus.Lock()
	mock.calls.GetGarageStatus = append(mock.calls.GetGarageStatus, callInfo)
	lockRepoCARMockGetGarageStatus.Unlock()
	return mock.GetGarageStatusFunc(IDgarage)
}

// GetGarageStatusCalls gets all the calls that were made to GetGarageStatus.
// Check the length with:
//     len(mockedRepoCAR.GetGarageStatusCalls())
func (mock *RepoCARMock) GetGarageStatusCalls() []struct {
	IDgarage int
} {
	var calls []struct {
		IDgarage int
	}
	lockRepoCARMockGetGarageStatus.RLock()
	calls = mock.calls.GetGarageStatus
	lockRepoCARMockGetGarageStatus.RUnlock()
	return calls
}
